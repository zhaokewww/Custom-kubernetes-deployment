apiVersion: v1
kind: Pod
metadata:
  annotations:
    etcd.version: 3.1.2
  labels:
    app: etcd
    etcd_cluster: etcd-cluster
    etcd_node: etcd-cluster-0000
  name: etcd-cluster-0000
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - sleep 5; /usr/local/bin/etcd --data-dir=/var/etcd/data
      --listen-client-urls=http://0.0.0.0:2379 --advertise-client-urls=http://0.0.0.0:2379
    image: quay.io/coreos/etcd:v3.1.2
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - ETCDCTL_API=3 etcdctl get foo
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 10
    name: etcd
    ports:
    - containerPort: 2380
      name: server
      protocol: TCP
    - containerPort: 2379
      name: client
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/etcd
      name: etcd-data
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.alpha.kubernetes.io/notReady
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.alpha.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: etcd-data

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: etcd
    etcd_cluster: etcd-cluster
  name: etcd-cluster
  namespace: kube-system
spec:
  ports:
  - name: client
    port: 2379
    protocol: TCP
    targetPort: 2379
  selector:
    app: etcd
    etcd_cluster: etcd-cluster
  sessionAffinity: None
